
from pathlib import Path

from subprocess import run as subProcessRun
from subprocess import CompletedProcess

from codeallyadvanced.ui.UnitTestBaseW import UnitTestBaseW
from codeallybasic.UnitTestBase import UnitTestBase

from umlio.IOTypes import PROJECT_SUFFIX
from umlio.IOTypes import UmlDiagram
from umlio.IOTypes import UmlDiagramTitle
from umlio.IOTypes import UmlDiagramType
from umlio.IOTypes import XML_SUFFIX

EXTERNAL_DIFF_PROGRAM: str = 'diff'

EMPTY_DIAGRAMS_BASE_FILENAME: str = 'EmptyDiagramsProject'
EMPTY_DIAGRAMS_XML_PROJECT: str = f'{EMPTY_DIAGRAMS_BASE_FILENAME}{XML_SUFFIX}'
EMPTY_DIAGRAMS_COMPRESSED_PROJECT: str = f'{EMPTY_DIAGRAMS_BASE_FILENAME}{PROJECT_SUFFIX}'


class UmlIOBaseTest(UnitTestBaseW):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 06 July 2025

        A place to keep common unit test code
    """
    # noinspection SpellCheckingInspection
    GOLDEN_FILES_PACKAGE_NAME: str = f'{UnitTestBase.RESOURCES_PACKAGE_NAME}.goldenfiles'

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def _createUmlDiagram(self, diagramType: UmlDiagramType, diagramTitle: str) -> UmlDiagram:

        umlDiagram: UmlDiagram  = UmlDiagram()
        umlDiagram.diagramType  = diagramType
        umlDiagram.diagramTitle = UmlDiagramTitle(diagramTitle)

        return umlDiagram

    def _runDiff(self, generatedFile: Path, goldenFile: Path, diffProgram: str = EXTERNAL_DIFF_PROGRAM) -> int:

        command: str = f'{diffProgram} {goldenFile} {generatedFile}'
        completedProcess: CompletedProcess = subProcessRun([command], shell=True, capture_output=True, text=True, check=False)

        return completedProcess.returncode
