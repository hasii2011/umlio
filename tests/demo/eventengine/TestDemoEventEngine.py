from typing import List
from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.UnitTestBase import UnitTestBase

from tests.demo.eventengine.DemoEventEngine import DemoEventEngine
from tests.demo.eventengine.DemoEventType import DemoEventType
from tests.demo.eventengine.IAppEventEngine import UniqueId

UNIQUE_ID: UniqueId = UniqueId('DEADBEEF')


class TestDemoEventEngine(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 21 July 2025
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testDiagramChanged(self):

        eventEngine: DemoEventEngine = DemoEventEngine()
        eventEngine.registerListener(DemoEventType.DIAGRAM_CHANGED, uniqueId=UNIQUE_ID, callback=self._diagramChangedCallback)

        eventEngine.sendEvent(DemoEventType.DIAGRAM_CHANGED, uniqueId=UNIQUE_ID, name='Bogus', data=[1, 2, 3])

    def _diagramChangedCallback(self, name: str, data: List[int]):
        self.logger.debug(f'{name}, {data}')


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestDemoEventEngine))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
